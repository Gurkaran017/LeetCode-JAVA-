/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxDepth(TreeNode root) {
        if(root==null){
        return 0;
      }
      Queue<TreeNode> que = new LinkedList<>();
      que.add(root);
      int Levels = 0;

      while(!que.isEmpty()){
        Levels++;
        int size = que.size();
        for(int i = 0 ; i <size ; i++){
            TreeNode element = que.poll();
             if(element.left!=null){
            que.add(element.left);
        }
        if(element.right!=null){
            que.add(element.right);
        }
        }
      }
      return Levels;
    }
}
