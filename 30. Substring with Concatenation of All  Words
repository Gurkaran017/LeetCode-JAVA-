class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
        if(s==null || s.length()==0 || words==null || words.length==0){
            return new ArrayList<>();
        }
        HashMap<String,Integer> freq = new HashMap<>();
        ArrayList<Integer> result = new ArrayList<>();

        for(String word : words){
            freq.put(word,freq.getOrDefault(word,0)+1);
        }
        int totalWords = words.length;
        int eachWord = words[0].length();

        for(int i = 0 ; i <=s.length() - totalWords*eachWord ; i++){
            HashMap<String,Integer> seen = new HashMap<>();

            for(int j = 0 ; j<totalWords ; j++){
                int index = i+j*eachWord;
                String word = s.substring(index,index+eachWord);
                if(!freq.containsKey(word)){
                    break;
                }
                seen.put(word,seen.getOrDefault(word,0)+1);
                if(seen.get(word)>freq.get(word)){
                    break;
                }
                if(j+1==totalWords){
                    result.add(i);
                }
            }
        }
        return result;
    }
}
