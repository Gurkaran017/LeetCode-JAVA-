/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
     ListNode dummy = new ListNode(0);
     dummy.next = head;
     ListNode temp = dummy;
     int count = 0;

     while(temp.next!=null){
         temp = temp.next;
         count++;
     }
     temp = dummy;
     while(temp.next!=null){
         if(count<k){
             break;
         }
         int node =k-1;
         ListNode tempNext = temp.next;
         ListNode first = temp.next;
         ListNode second = first.next;

         while(node-- > 0){
             ListNode Next = second.next;
             second.next = first;
             first = second;
             second=Next;
         }
         count = count - k;
         temp.next= first;
         tempNext.next = second;
         temp =tempNext;
     }
     return dummy.next;
    }
}
